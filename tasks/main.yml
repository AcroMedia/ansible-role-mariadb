- name: Check if OS is Ubuntu LTS
  fail: msg="Server must be Ubuntu LTS"
  when: ansible_distribution != 'Ubuntu'
    or (ansible_distribution_version != '14.04'
      and ansible_distribution_version != '16.04'
      and ansible_distribution_version != '18.04')

- name: Install software-properties-common
  apt: name=software-properties-common update_cache=yes state=present

- name: Install MariaDB Server
  apt: name=mariadb-server state=present update_cache=yes

- name: Install python module
  apt: name=python-mysqldb state=present

- name: Ensure mysql is running and starts on boot
  service: name=mysql state=started enabled=true

- name: Get list of hosts for the anonymous user.
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  check_mode: no

- name: Remove anonymous MySQL users.
  mysql_user:
     name: ""
     host: "{{ item }}"
     state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"

- name: remove the test database
  mysql_db:
    name: test
    state: absent

- name: Check for existence of /root/.my.cnf
  stat: path=/root/.my.cnf
  register: root_my_cnf
  when: ansible_distribution_version == '14.04'
    or ansible_distribution_version == '16.04'
    # Not necessary for 18.04 , apparently?!

- name: Check if mysql root password set
  fail:
    msg: "/root/.my.cnf must exist, or --extra-vars 'mysql_root_password=SOME_PASSWORD' must be passed in"
  when: root_my_cnf is defined
    and root_my_cnf.stat is defined
    and root_my_cnf.stat.exists == False
    and mysql_root_password is not defined
    and (ansible_distribution_version == '14.04'
      or ansible_distribution_version == '16.04')
  # ^^^ root password storage not necessary for 18.04

- name: update mysql root password
  mysql_user: "name=root host={{ item }} password={{ mysql_root_password }}"
  with_items:
    - "{{ ansible_fqdn }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: (root_my_cnf is defined
    and root_my_cnf.stat is defined
    and root_my_cnf.stat.exists == False)
    or mysql_root_password is defined
  register: mysql_password_changed

- name: copy .my.cnf file with root password credentials
  template: src=root/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600 backup=yes
  when: mysql_password_changed is defined
    and mysql_password_changed is changed
    and (ansible_distribution_version == '14.04'
        or ansible_distribution_version == '16.04')
  # ^^^ root password storage not necessary for 18.04

- name: Apply Acro's MariaDB 10.0 server config to Ubuntu 16.04
  template:
    src: etc/mysql/conf.d/acro.cnf.j2
    dest: /etc/mysql/conf.d/acro.cnf
    owner: root
    mode: 0644
    backup: yes
  notify:
    - restart mysql
  when: ansible_distribution_version == '16.04'
